// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Organization {
  GSR
  PPSR
  FRIS
  STUW
  STUREC
  STUART
  BSR
  STUVECO
  STURA
  STUBIO
  DSR
  STUGG
  STUFF

  @@map("organization")
}

model Configuration {
  id           Int          @id @default(autoincrement())
  organization Organization @unique
  active       Boolean      @default(false)

  // Socials
  facebook_url  String?
  twitter_url   String?
  instagram_url String?

  // Contact Information
  adres       String?
  phone       String?
  email_adres String

  // Branding
  brand_color_primary   String
  brand_color_secondary String
  logo_url              String

  // Features
  i18n             Boolean @default(false)
  who_section      Boolean @default(false)
  news_section     Boolean @default(false)
  faq_section      Boolean @default(false)
  opinions_section Boolean @default(false)

  @@map("configuration")
}

model OpinionGroup {
  id           Int           @id @default(autoincrement())
  sort_index   Int
  name         String
  about        String?
  opinions     Opinion[]
  organization Organization?

  @@map("opinion_group")
}

model Opinion {
  id            Int           @id @default(autoincrement())
  published_at  DateTime
  title         String
  about         String?
  document_link String
  published     Boolean
  organization  Organization?

  opinion_group_id Int
  opinion_group    OpinionGroup @relation(fields: [opinion_group_id], references: [id])

  @@map("opinion")
}

model News {
  id               Int           @id @default(autoincrement())
  title            String
  content          String
  synopsis         String
  published        Boolean
  published_at     DateTime
  author           String
  banner_image     String
  banner_image_alt String?
  organization     Organization?

  @@map("news")
}

model Question {
  id           Int           @id @default(autoincrement())
  question     String
  answer       String
  sort_index   Int           @default(0)
  organization Organization?

  question_category_id Int
  question_category    QuestionCategory @relation(fields: [question_category_id], references: [id])

  @@map("question")
}

model QuestionCategory {
  id           Int           @id @default(autoincrement())
  description  String?
  sort_index   Int           @default(0)
  title        String
  questions    Question[]
  slug         String
  organization Organization?

  @@map("question_category")
}
